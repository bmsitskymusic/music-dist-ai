version: "3.9"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: music_backend
    restart: always
    volumes:
      - ./backend:/var/www
    depends_on:
      - db
      - redis
    networks:
      - music_net

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: music_frontend
    restart: always
    ports:
      - "3000:80"   # Frontend served by Nginx
    networks:
      - music_net

  nginx:
    image: nginx:alpine
    container_name: music_nginx
    restart: always
    ports:
        - "80:80"
        - "443:443"
    volumes:
        - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
        - ./frontend/dist:/usr/share/nginx/html:ro
    depends_on:
        - frontend
        - backend
    networks:
        - music_net

  db:
    image: mysql:8.0
    container_name: music_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: music_ai
      MYSQL_USER: music
      MYSQL_PASSWORD: music
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - music_net

  redis:
    image: redis:alpine
    container_name: music_redis
    restart: always
    networks:
      - music_net

volumes:
  db_data:

networks:
  music_net:
    driver: bridge
