From 5f02b5c7a77e7f8f98a3f92f9b1234567890abcd Mon Sep 17 00:00:00 2001
From: ChatGPT <bot@example.com>
Date: Sat, 14 Sep 2025 12:00:00 +0700
Subject: [PATCH] Add CI/CD workflow + Docker setup

---
 .github/workflows/build-and-publish.yml | 94 +++++++++++++++++++++++++
 backend/Dockerfile                      | 23 ++++++
 frontend/Dockerfile                     | 26 +++++++
 nginx/Dockerfile                        | 20 +++++
 docker-compose.yml                      | 52 +++++++++++++
 5 files changed, 215 insertions(+)
 create mode 100644 .github/workflows/build-and-publish.yml
 create mode 100644 backend/Dockerfile
 create mode 100644 frontend/Dockerfile
 create mode 100644 nginx/Dockerfile
 create mode 100644 docker-compose.yml

diff --git a/.github/workflows/build-and-publish.yml b/.github/workflows/build-and-publish.yml
new file mode 100644
index 0000000..1111111
--- /dev/null
+++ b/.github/workflows/build-and-publish.yml
@@
+name: Build & Publish
+
+on:
+  workflow_dispatch:
+  push:
+    branches: [ main ]
+
+jobs:
+  build:
+    runs-on: ubuntu-latest
+
+    steps:
+      - name: Checkout repo
+        uses: actions/checkout@v3
+
+      - name: Setup PHP
+        uses: shivammathur/setup-php@v2
+        with:
+          php-version: '8.2'
+          extensions: mbstring, bcmath, intl, pdo_mysql
+          coverage: none
+
+      - name: Setup Node.js
+        uses: actions/setup-node@v3
+        with:
+          node-version: '18'
+
+      - name: Install backend dependencies
+        run: |
+          cd backend
+          composer install --no-dev --optimize-autoloader
+          php artisan config:clear || true
+
+      - name: Install frontend dependencies
+        run: |
+          cd frontend
+          npm install
+          npm run build
+
+      - name: Package source code
+        run: |
+          mkdir -p dist_package
+          zip -r dist_package/music-dist-full.zip backend frontend docker-compose.yml
+
+      - name: Split zip into 10MB parts
+        run: |
+          cd dist_package
+          split -b 10m music-dist-full.zip music-dist-full.zip.part-
+          ls -lh
+
+      - name: Upload split parts as artifacts
+        uses: actions/upload-artifact@v3
+        with:
+          name: music-dist-full
+          path: dist_package/music-dist-full.zip.part-*
@@
+  docker:
+    runs-on: ubuntu-latest
+    needs: build
+
+    steps:
+      - name: Checkout repo
+        uses: actions/checkout@v3
+
+      - name: Login to DockerHub
+        uses: docker/login-action@v2
+        with:
+          username: ${{ secrets.DOCKERHUB_USERNAME }}
+          password: ${{ secrets.DOCKERHUB_TOKEN }}
+
+      - name: Set up Docker Buildx
+        uses: docker/setup-buildx-action@v2
+
+      - name: Build and push backend
+        uses: docker/build-push-action@v4
+        with:
+          context: ./backend
+          file: ./backend/Dockerfile
+          push: true
+          tags: ${{ secrets.DOCKERHUB_USERNAME }}/music-dist-backend:latest
+
+      - name: Build and push frontend
+        uses: docker/build-push-action@v4
+        with:
+          context: ./frontend
+          file: ./frontend/Dockerfile
+          push: true
+          tags: ${{ secrets.DOCKERHUB_USERNAME }}/music-dist-frontend:latest
+
+      - name: Build and push nginx
+        uses: docker/build-push-action@v4
+        with:
+          context: ./nginx
+          file: ./nginx/Dockerfile
+          push: true
+          tags: ${{ secrets.DOCKERHUB_USERNAME }}/music-dist-nginx:latest
+
diff --git a/backend/Dockerfile b/backend/Dockerfile
new file mode 100644
index 0000000..2222222
--- /dev/null
+++ b/backend/Dockerfile
@@
+FROM php:8.2-fpm
+
+WORKDIR /var/www
+
+RUN apt-get update && apt-get install -y \
+    git unzip libzip-dev libpng-dev libonig-dev \
+    && docker-php-ext-install pdo pdo_mysql mbstring bcmath zip gd
+
+COPY . .
+
+RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \
+    && composer install --no-dev --optimize-autoloader
+
+CMD ["php-fpm"]
+
+EXPOSE 9000
diff --git a/frontend/Dockerfile b/frontend/Dockerfile
new file mode 100644
index 0000000..3333333
--- /dev/null
+++ b/frontend/Dockerfile
@@
+FROM node:18 as build
+WORKDIR /app
+COPY package*.json ./
+RUN npm install
+COPY . .
+RUN npm run build
+
+FROM nginx:alpine
+COPY --from=build /app/dist /usr/share/nginx/html
+EXPOSE 80
diff --git a/nginx/Dockerfile b/nginx/Dockerfile
new file mode 100644
index 0000000..4444444
--- /dev/null
+++ b/nginx/Dockerfile
@@
+FROM nginx:alpine
+COPY default.conf /etc/nginx/conf.d/default.conf
+EXPOSE 80
+
diff --git a/nginx/default.conf b/nginx/default.conf
new file mode 100644
index 0000000..5555555
--- /dev/null
+++ b/nginx/default.conf
@@
+server {
+    listen 80;
+    server_name _;
+
+    location / {
+        root /usr/share/nginx/html;
+        index index.html;
+        try_files $uri /index.html;
+    }
+
+    location /api {
+        proxy_pass http://backend:9000;
+        proxy_set_header Host $host;
+        proxy_set_header X-Real-IP $remote_addr;
+        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
+        proxy_set_header X-Forwarded-Proto $scheme;
+    }
+}
+
diff --git a/docker-compose.prod.yml b/docker-compose.prod.yml
new file mode 100644
index 0000000..6666666
--- /dev/null
+++ b/docker-compose.prod.yml
@@
+version: "3.9"
+services:
+  backend:
+    image: ${DOCKERHUB_USERNAME}/music-dist-backend:latest
+    env_file:
+      - ./backend/.env
+    depends_on:
+      - db
+
+  frontend:
+    image: ${DOCKERHUB_USERNAME}/music-dist-frontend:latest
+    depends_on:
+      - backend
+
+  nginx:
+    image: ${DOCKERHUB_USERNAME}/music-dist-nginx:latest
+    ports:
+      - "80:80"
+    depends_on:
+      - frontend
+      - backend
+
+  db:
+    image: mysql:8
+    environment:
+      MYSQL_DATABASE: musicdist
+      MYSQL_ROOT_PASSWORD: rootpass
+    volumes:
+      - db_data:/var/lib/mysql
+
+volumes:
+  db_data:
